name: Build CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 22 * * *'  # every day at 22:00 UTC

env:
  rust_toolchain: nightly-2022-01-20

jobs:
  workspace:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          override: true
          components: rust-src, rustfmt, clippy

      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features

      - name: Build docs
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all-features --no-deps

  test-libos:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mode: [linux, zircon]
    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview, clippy

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package zcore --features "${{ matrix.mode }} libos"

      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --package zcore --features "${{ matrix.mode }} libos"

  test-bare-metal:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, riscv64, aarch64]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview, clippy

      - uses: actions-rs/install@v0.1
        with:
          crate: cargo-binutils
          version: latest

      - name: Build ${{ matrix.arch }} bare-metal zircon
        if: matrix.arch == 'x86_64'
        run: cd zCore && make build  ARCH=${{ matrix.arch }}

      - name: Clippy ${{ matrix.arch }} bare-metal zircon
        if: matrix.arch == 'x86_64'
        run: cd zCore && make clippy ARCH=${{ matrix.arch }}

      - name: Build ${{ matrix.arch }} bare-metal linux
        if: matrix.arch == 'riscv64'
        run: cd zCore && make build  ARCH=${{ matrix.arch }} LINUX=1

      - name: Clippy ${{ matrix.arch }} bare-metal linux
        if: matrix.arch == 'riscv64'
        run: cd zCore && make clippy ARCH=${{ matrix.arch }} LINUX=1

      - name: Build ${{ matrix.arch }} bare-metal linux
        if: matrix.arch == 'aarch64'
        run: cd zCore && make build  ARCH=${{ matrix.arch }} LINUX=1

      - name: Clippy ${{ matrix.arch }} bare-metal linux
        if: matrix.arch == 'aarch64'
        run: cd zCore && make clippy ARCH=${{ matrix.arch }} LINUX=1
