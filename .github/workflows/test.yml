name: Test CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 22 * * *'  # every day at 22:00 UTC

env:
  rust_toolchain: nightly-2022-01-20
  qemu_version: 7.0.0

jobs:
  zircon-core-test:
    name: Zircon Core Test Baremetal
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview, rustfmt, clippy

      - name: Pull prebuilt images
        run: |
          git lfs pull -I prebuilt/zircon/x64/core-tests.zbi
          git lfs pull -I prebuilt/zircon/x64/libzircon.so
          git lfs pull -I prebuilt/zircon/x64/userboot.so

      - name: Cache QEMU
        id: cache-qemu
        uses: actions/cache@v3
        with:
          path: qemu-${{ env.qemu_version }}
          key: qemu-${{ env.qemu_version }}

      - name: Download and Compile QEMU
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        run: .github/scripts/make-qemu.sh ${{ env.qemu_version }}

      - name: Install QEMU
        run: |
          cd qemu-${{ env.qemu_version }} && sudo make install
          qemu-system-x86_64 --version

      - name: Install python dependencies
        run: pip3 install -r tests/requirements.txt

      - name: Run fast tests
        if: github.event_name != 'schedule'
        run: cd tests && python3 zircon_core_test.py --fast

      - name: Run full tests
        if: github.event_name == 'schedule'
        run: cd tests && python3 zircon_core_test.py

  linux-libc-test-libos:
    name: Linux Libc Test Libos
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview, rustfmt, clippy

      - name: Cache musl toolchain
        uses: actions/cache@v3
        with:
          path: ignored/origin/${{ matrix.arch }}/${{ matrix.arch }}-linux-musl-cross.tgz
          key: ${{ matrix.arch }}-linux-musl-cross

      - name: Prepare rootfs
        run: make libc-test

      - name: Install python dependencies
        run: pip3 install -r tests/requirements.txt

      - name: Run fast tests
        if: github.event_name != 'schedule'
        run: cd tests && python3 linux_libc_test.py --libos --fast

      - name: Run full tests
        if: github.event_name == 'schedule'
        run: cd tests && python3 linux_libc_test.py --libos

  linux-libc-test-baremetal:
    name: Linux Libc Test Baremetal
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, riscv64, aarch64]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview, rustfmt, clippy

      - if: matrix.arch == 'riscv64'
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-binutils
          version: latest

      - name: Cache QEMU
        id: cache-qemu
        uses: actions/cache@v3
        with:
          path: qemu-${{ env.qemu_version }}
          key: qemu-${{ env.qemu_version }}

      - name: Download and Compile QEMU
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        run: .github/scripts/make-qemu.sh ${{ env.qemu_version }}

      - name: Install QEMU
        run: |
          cd qemu-${{ env.qemu_version }} && sudo make install
          qemu-system-${{ matrix.arch }} --version

      - name: Cache musl toolchain
        uses: actions/cache@v3
        with:
          path: ignored/origin/${{ matrix.arch }}/${{ matrix.arch }}-linux-musl-cross.tgz
          key: ${{ matrix.arch }}-linux-musl-cross

      - name: Prepare rootfs
        run: make libc-test ARCH=${{ matrix.arch }} && make image ARCH=${{ matrix.arch }}

      - name: Install python dependencies
        run: pip3 install -r tests/requirements.txt

      - name: Run fast tests
        if: github.event_name != 'schedule'
        run: cd tests && python3 linux_libc_test.py --arch ${{ matrix.arch }} --fast

      - name: Run full tests
        if: github.event_name == 'schedule'
        run: cd tests && python3 linux_libc_test.py --arch ${{ matrix.arch }}

  linux-other-test-baremetal:
    name: Linux Other Test Baremetal
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, riscv64, aarch64]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ env.rust_toolchain }}
          components: rust-src, llvm-tools-preview, rustfmt, clippy

      - if: matrix.arch == 'riscv64'
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-binutils
          version: latest

      - name: Cache QEMU
        id: cache-qemu
        uses: actions/cache@v3
        with:
          path: qemu-${{ env.qemu_version }}
          key: qemu-${{ env.qemu_version }}

      - name: Download and Compile QEMU
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        run: .github/scripts/make-qemu.sh ${{ env.qemu_version }}

      - name: Install QEMU
        run: |
          cd qemu-${{ env.qemu_version }} && sudo make install
          qemu-system-${{ matrix.arch }} --version

      - name: Cache musl toolchain
        uses: actions/cache@v3
        with:
          path: ignored/origin/${{ matrix.arch }}/${{ matrix.arch }}-linux-musl-cross.tgz
          key: ${{ matrix.arch }}-linux-musl-cross

      - name: Prepare rootfs
        run: make other-test ARCH=${{ matrix.arch }} && make image ARCH=${{ matrix.arch }}

      - name: Install python dependencies
        run: pip3 install -r tests/requirements.txt

      - name: Run fast tests
        if: github.event_name != 'schedule'
        run: cd tests && python3 linux_other_test.py --arch ${{ matrix.arch }} --fast

      - name: Run full tests
        if: github.event_name == 'schedule'
        run: cd tests && python3 linux_other_test.py --arch ${{ matrix.arch }}
