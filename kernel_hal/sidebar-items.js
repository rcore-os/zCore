window.SIDEBAR_ITEMS = {"constant":[["PAGE_SIZE","The smallest size of a page (4K)."]],"enum":[["CachePolicy","Generic cache policy."],["IpiReason",""]],"fn":[["init","Non-SMP initialization."],["primary_init","The main part of the primary CPU initialization."],["primary_init_early","Initialize the primary CPU at an early stage (before the physical frame allocator)."],["secondary_init","Initialize the secondary CPUs."]],"mod":[["addr","Definition of phyical, virtual addresses and helper functions."],["boot","Bootstrap and initialization."],["config","Kernel configuration."],["console","Console input and output."],["context","User context."],["cpu","CPU information."],["drivers","Device drivers."],["interrupt",""],["libos","Functions only available on the libos mode."],["mem","Physical memory operations."],["net",""],["rand","Random number generator."],["thread","Thread spawning."],["timer","Time and clock functions."],["user","Raw pointer from user land."],["vdso","VDSO constants."],["vm","Virtual memory operations."]],"struct":[["HalError","The error type which is returned from HAL functions. TODO: more error types."],["KernelConfig","Kernel configuration passed by kernel when calls [`crate::primary_init_early()`]."],["LazyInit",""],["MMUFlags","Generic memory flags."],["MpscQueue",""]],"trait":[["KernelHandler","Functions implemented in the kernel and used by HAL funtions."]],"type":[["DevVAddr","Device address."],["HalResult","The result type returned by HAL functions."],["IpiEntry",""],["PhysAddr","Physical address."],["VirtAddr","Virtual address."]]};